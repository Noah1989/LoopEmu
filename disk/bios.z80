	include	a:bios.def
	list	on

; boot code
	org	reset
	di
	ld	sp,stack
	jp	init

; rst vectors are used for fast virtual method calls
	org	virt0
	ld	l,(ix+0)
	ld	h,(ix+1)
	jp	(hl)

	org	virt1
	ld	l,(ix+2)
	ld	h,(ix+3)
	jp	(hl)

	org	virt2
	ld	l,(ix+4)
	ld	h,(ix+5)
	jp	(hl)

	org	virt3
	ld	l,(ix+6)
	ld	h,(ix+7)
	jp	(hl)

	org	virt4
	ld	l,(ix+8)
	ld	h,(ix+9)
	jp	(hl)

	org	virt5
	ld	l,(ix+10)
	ld	h,(ix+11)
	jp	(hl)

; rst 38h (opcode ff) -> error handler
	org	error
	di
	call	errst
	call	errst
	call	errst
errloop	halt
	jr	errloop
errst	ld	a,20h
	out	(0bch),a
	pop	hl
	ex	(sp),hl
	ld	a,h
	call	errhex
	ld	a,l
errhex	ld	b,a
	rrca
	rrca
	rrca
	rrca
	call	errnib
	ld	a,b
errnib	and	a,0fh
	add	a,90h
	daa
	adc	a,40h
	daa
	out	(0bch),a
	ret

; non-maskable interrupt
	org	nmi
	rst	error

; more virtual method calls
	org	virt6
	ld	l,(ix+12)
	ld	h,(ix+13)
	jp	(hl)
	org	virt7
	ld	l,(ix+14)
	ld	h,(ix+15)
	jp	(hl)
	org	virt8
	ld	l,(ix+16)
	ld	h,(ix+17)
	jp	(hl)

	org	80h

; title string near the beginning for easier rom identification
title	db	12,'Loop Micro - Bootstrap Stage 1',13,10
titleln	equ	$-title

	include	a:device.inc
	include	a:video.inc
	include	a:keyboard.inc
	include	a:console.inc
	include a:serial.inc
	include a:multi.inc
	include	a:system.inc

; main entry point
; clear free memory
init	ld	hl,last
	ld	de,last+1
	ld	bc,charmap-last-1
	ld	(hl),0ffh
	ldir
	ld	hl,stackl
	ld	de,stackl+1
	ld	bc,timekpr-stackl-1
	ld	(hl),0ffh
	ldir
; initialize hardware
	call	sysinit

; welcome message
	ld	ix,(dvlist+term)
	ld	de,title
	ld	bc,titleln
	rst	dvwrite

	call	user
last	rst	error

